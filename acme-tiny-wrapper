#!/bin/bash

set -e

DATADIR="/var/lib/acme-tiny"
CONFIG="/etc/acme-tiny"
ACME_TINY_BIN="acme-tiny"

CONFIGFILE="$CONFIG/acme-tiny.cfg"
[ -e $CONFIGFILE ] && source "$CONFIGFILE"
[ -z "$ACME_DIR" ] && ACME_DIR="/var/www/acme-challenges/"

ACCOUNT_KEY="${DATADIR}/account.key"
INTERMEDIATE="${DATADIR}/intermediate.pem"

# Get intermediate certificate
if curl -f -o "${INTERMEDIATE}.tmp" https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem; then
    mv "${INTERMEDIATE}.tmp" "${INTERMEDIATE}"
else
    rm -f "${INTERMEDIATE}.tmp"
    # Allow curl to fail if there is already an intermediate certificate
	 test -s "${INTERMEDIATE}"
fi

# Generate account key if necessary
if ! test -s "${ACCOUNT_KEY}"; then
  touch "${ACCOUNT_KEY}"
  chmod 0600 "${ACCOUNT_KEY}"
  openssl genrsa 4096 > "${ACCOUNT_KEY}"
  chmod 0400 "${ACCOUNT_KEY}"
fi

# Request certificates
for csr in ${CONFIG}/csr/*.csr
do
    name="$(basename "$csr")"
    name="${name%.csr}"
    work_dir="${DATADIR}/certs/${name}"
    CERT="${work_dir}/cert.pem"
    FULLCHAIN="${work_dir}/fullchain.pem"

    mkdir -p "${work_dir}"

    ${ACME_TINY_BIN} --account-key "$ACCOUNT_KEY" \
		 --csr "$csr" --acme-dir "$ACME_DIR" > "${CERT}.tmp"
    mv -f "${CERT}.tmp" "${CERT}"
    cat "${CERT}" "${INTERMEDIATE}" > "${FULLCHAIN}"

    # Check for location specification
    if [ -e "${name%.csr}.location" ]; then
       cp "${FULLCHAIN}" "$(cat "${name}.location")"
    elif [ -n "${DEFAULT_LOCATION}" ]; then
       cp "${FULLCHAIN}" "${DEFAULT_LOCATION}/${name}.crt"
    fi

done
